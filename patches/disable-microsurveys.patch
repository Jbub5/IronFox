diff --git a/app/nimbus.fml.yaml b/app/nimbus.fml.yaml
index 8f6c6df..7a8db7e 100644
--- a/app/nimbus.fml.yaml
+++ b/app/nimbus.fml.yaml
@@ -549,7 +549,7 @@ features:
         description: >
           When the feature is enabled then microsurveys can be used.
         type: Boolean
-        default: true
+        default: false
 
   set-as-default-prompt:
     description: >
diff --git a/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 807c5c2..0de26b7 100644
--- a/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -2008,7 +2008,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     fun getBottomToolbarHeight(context: Context): Int {
         val isNavbarVisible = context.shouldAddNavigationBar()
-        val isMicrosurveyEnabled = shouldShowMicrosurveyPrompt
+        val isMicrosurveyEnabled = false
         val isToolbarAtBottom = toolbarPosition == ToolbarPosition.BOTTOM
 
         val navbarHeight = appContext.resources.getDimensionPixelSize(R.dimen.browser_navbar_height)
@@ -2060,7 +2060,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     fun getBottomToolbarContainerHeight(): Int {
         val isNavBarEnabled = navigationToolbarEnabled
-        val isMicrosurveyEnabled = shouldShowMicrosurveyPrompt
+        val isMicrosurveyEnabled = false
         val navbarHeight = appContext.resources.getDimensionPixelSize(R.dimen.browser_navbar_height)
         val navbarDividerHeight = appContext.resources.getDimensionPixelSize(R.dimen.browser_navbar_divider_height)
         val microsurveyHeight =
@@ -2086,9 +2086,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the microsurvey feature is enabled.
      */
-    var microsurveyFeatureEnabled by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_microsurvey_feature_enabled),
-        default = FxNimbus.features.microsurveys.value().enabled,
+    var microsurveyFeatureEnabled = false
     )
 
     /**
